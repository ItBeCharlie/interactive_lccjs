LCC.js Assemble/Link/Interpret/Debug Ver 0.1  Mon, Dec 2, 2024, 21:41:47
Billy, Bob J

Header
o
C

Loc   Code           Source Code
                    ; demoS.a: Demonstrating rotate commands rol, ror
                    ;
                    ; This program shows how bits are rotated in registers.
                    
                            ; Initialize r0 with a specific bit pattern
0000  2012               ld r0, num  ; r0 = binary 1000 0000 0000 0001
                            ; Rotate r0 left by 1
0001  f004               hout r0
0002  f001               nl
                    	
0003  a025               rol r0, 1       ; r0 = rol(r0, 1)
                            ; After rol, r0 should be 0x0003 (binary 0000 0000 0000 0011)
0004  f004               hout r0         ; Output: 3
0005  f001               nl
                    
                            ; Rotate r0 right by 1
0006  a026               ror r0, 1       ; r0 = ror(r0, 1)
                            ; After ror, r0 should be back to 0x8001
0007  f004               hout r0         ; Output: 8001
0008  f001               nl
                    
                            ; Rotate r1 left by 4
0009  220a               ld r1, num2  ; r1 = binary 0001 0010 0011 0100
000a  f204               hout r1
000b  f001               nl
                    
000c  a285               rol r1, 4       ; r1 = rol(r1, 4)
                            ; After rol, r1 should be 0x2341 (rotated bits)
000d  f204               hout r1         ; Output: 2341
000e  f001               nl
                    
                            ; Rotate r1 right by 4
000f  a286               ror r1, 4       ; r1 = ror(r1, 4)
                            ; After ror, r1 should be back to 0x1234
0010  f204               hout r1         ; Output: 1234
0011  f001               nl
                    
0012  f000               halt
                    
0013  8001       num: .word 0x8001
0014  1234       num2: .word 0x1234
                    
                    ; Practical applications:
                    ; - Rotate operations are used in cryptography algorithms like RSA and AES for data scrambling.
                    ; - Rotating bits helps implement circular buffers and cyclic redundancy checks (CRCs).
                    ; - Useful in graphics programming for color transformations and pixel manipulations.
====================================================== Output
8001
3
8001
1234
2341
1234

========================================== Program statistics
Input file name          =   ./demos/demoS.a
Instructions executed    =   13 (hex)    19 (dec)
Program size             =   15 (hex)    21 (dec)
Max stack size           =   0 (hex)    0 (dec)
Load point               =   0 (hex)    0 (dec)
